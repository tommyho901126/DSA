#include<stdio.h>
#include<stdlib.h>
int stop=0;
int wait_t;
int rec_t;
int ii;
int total;
int wait_s[400010];
int rec_s[400010][2];
const int de1=0;
int show_ans(){
	int i;
	printf("Yes\n");
	for(i=rec_t-1;i>=0;i--) printf("%d %d\n",rec_s[i][0],rec_s[i][1]);
	return 0;
}
int  DFS_visit(int **arr,int n,int a,int b){
	if(de1) printf("now visiting(%d,%d)\n",a,b);
	int m,i,c,d,x;
	if(stop==1) return 0;
	rec_s[rec_t][0]=b;
	rec_s[rec_t++][1]=a;
	arr[a][0]--;
	arr[b][0]--;
	total=total-2;
	
	if(total==0) return show_ans();
	
	m=arr[a][0];
	if(m>0) c=arr[a][m];
	if(m>0) if(arr[c][0]>0) d=arr[c][arr[c][0]];
	if(m>0) if(arr[c][0]>0) if(d==a) wait_s[wait_t++]=b;
	if(m>0) if(arr[c][0]>0) if(d==a) return DFS_visit(arr,n,c,d);
	
	m=arr[b][0];
	if(m>0) c=arr[b][m];
	if(m>0) if(arr[c][0]>0) d=arr[c][arr[c][0]];
	if(m>0) if(arr[c][0]>0) if(d==b) return DFS_visit(arr,n,c,d);
	
	if(wait_t>0){
		x=wait_s[--wait_t];
		m=arr[x][0];
		if(m>0) c=arr[x][m];
		if(m>0) if(arr[c][0]>0) d=arr[c][arr[c][0]];
		if(m>0) if(arr[c][0]>0) if(d==x) return DFS_visit(arr,n,c,d);
	}
	for(i=ii+1;i<=n;i++){
		m=arr[i][0];
		if(m>0) c=arr[i][m];
		if(m>0) if(arr[c][0]>0) d=arr[c][arr[c][0]];
		if(m>0) if(arr[c][0]>0) if(d==i&&c>d) return DFS_visit(arr,n,c,d);
	}
	printf("No");
	return 0;
}
int DFS(int **arr,int n){
	int i,m,a,b;
	wait_t=0;
	rec_t=0;
	if(total==0){
		printf("Yes");
		return 0;
	} 
	for(ii=1;ii<=n;ii++){
		m=arr[ii][0];
		if(m>0) a=arr[ii][m];
		if(m>0) if(arr[a][0]>0) b=arr[a][arr[a][0]];
		if(m>0) if(arr[a][0]>0) if(b==ii&&a>b) return DFS_visit(arr,n,a,b);
	}
	printf("No");
	return 0;
}

int main(){
	int i,j,k,n,a,b,*arr[100010];
	stop=0;
	scanf("%d",&n);
	total=0;
	for(i=1;i<=n;i++){
		scanf("%d",&a);
		arr[i]=(int *)malloc(sizeof(int)*(a+1));
		arr[i][0]=a;
		total+=a;
		for(j=1;j<=a;j++){
			scanf("%d",&b);
			arr[i][j]=b;
		} 
	}
	DFS(arr,n);
	for(i=1;i<=n;i++) free(arr[i]);
	return 0;
}
